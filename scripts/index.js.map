{"version":3,"sources":["scripts/index.ts"],"names":["container","conferences","dayContainer","lastDay","SCHEDULE","company","name","logo","time","Date","Conference","schedule","_classCallCheck","this","el","concat","getTime","Intl","DateTimeFormat","undefined","hour","minute","timeZoneName","format","Number","day","weekday","month","element","insertAdjacentHTML","document","getElementById","map","c","forEach","dayOfMonth","getDayOfMonth","createElement","classList","add","append","getDayString","appendTo"],"mappings":"mLAKA,IAwJQA,EAEAC,EAEFC,EACAC,EAhGAC,EAAwB,CAC5B,CACEC,QA/DO,CACTC,KAAM,UACNC,KAAM,UA8DJC,KAAM,IAAIC,KAAK,6BAEjB,CACEJ,QA9Dc,CAChBC,KAAM,YACNC,KAAM,iBA6DJC,KAAM,IAAIC,KAAK,4BAEjB,CACEJ,QA7Da,CACfC,KAAM,WACNC,KAAM,gBA4DJC,KAAM,IAAIC,KAAK,4BAEjB,CACEJ,QA5DqB,CACvBC,KAAM,mBACNC,KAAM,wBA2DJC,KAAM,IAAIC,KAAK,6BAEjB,CACEJ,QA3Da,CACfC,KAAM,WACNC,KAAM,iBA0DJC,KAAM,IAAIC,KAAK,2BAEjB,CACEJ,QA1Dc,CAChBC,KAAM,iBACNC,KAAM,iBAyDJC,KAAM,IAAIC,KAAK,2BAEjB,CACEJ,QAzDgB,CAClBC,KAAM,cACNC,KAAM,mBAwDJC,KAAM,IAAIC,KAAK,2BAEjB,CACEJ,QAxDY,CACdC,KAAM,UACNC,KAAM,eAuDJC,KAAM,IAAIC,KAAK,2BAEjB,CACEJ,QAvDyB,CAC3BC,KAAM,uBACNC,KAAM,4BAsDJC,KAAM,IAAIC,KAAK,2BAEjB,CACEJ,QAtDgB,CAClBC,KAAM,cACNC,KAAM,mBAqDJC,KAAM,IAAIC,KAAK,2BAEjB,CACEJ,QArDoB,CACtBC,KAAM,kBACNC,KAAM,uBAoDJC,KAAM,IAAIC,KAAK,4BAIbC,aAIJ,SAAAA,EAAYC,gGAAqBC,CAAAC,KAAAH,GAC/BG,KAAKF,SAAWA,EAChBE,KAAKC,GAAL,kEAAAC,OAE2BJ,EAASN,QAAQC,KAF5C,sCAAAS,OAGwBF,KAAKG,UAH7B,uHASA,OAAOC,KAAKC,oBAAeC,EAAW,CACpCC,KAAM,UACNC,OAAQ,UACRC,aAAc,UACbC,OAAOV,KAAKF,SAASH,8CAIxB,OAAOgB,OACLP,KAAKC,oBAAeC,EAAW,CAC7BM,IAAK,YACJF,OAAOV,KAAKF,SAASH,8CAK1B,OAAOS,KAAKC,oBAAeC,EAAW,CACpCO,QAAS,OACTC,MAAO,OACPF,IAAK,YACJF,OAAOV,KAAKF,SAASH,uCAGVoB,GACdA,EAAQC,mBAAmB,YAAahB,KAAKC,aAKzCd,EAAY8B,SAASC,eAAe,aAEpC9B,EAAcG,EAAS4B,IAAI,SAAAC,GAAC,OAAI,IAAIvB,EAAWuB,KAEjD/B,EAA4B,KAC5BC,GAAW,EAEfF,EAAYiC,QAAQ,SAAAD,GAClB,IAAME,EAAaF,EAAEG,gBAEjBjC,IAAYgC,IACdhC,EAAUgC,GAEVjC,EAAe4B,SAASO,cAAc,YACzBC,UAAUC,IAAI,OAE3BvC,EAAUwC,OAAOtC,GACjBA,EAAa2B,mBAAmB,cAAhC,qBAAAd,OAAoEkB,EAAEQ,eAAtE,WAGFR,EAAES,SAASxC","file":"index.js","sourcesContent":["interface ICompany {\n  name: string\n  logo: string\n}\n\nconst EA = {\n  name: 'EA Play',\n  logo: 'ea.svg',\n}\n\nconst MICROSOFT = {\n  name: 'Microsoft',\n  logo: 'microsoft.svg',\n}\n\nconst BETHESDA = {\n  name: 'Bethesda',\n  logo: 'bethesda.svg',\n}\n\nconst DEVOLVER_DIGITAL = {\n  name: 'Devolver Digital',\n  logo: 'devolver_digital.svg',\n}\n\nconst UPLOADVR = {\n  name: 'UploadVR',\n  logo: 'upload_vr.svg',\n}\n\nconst PC_GAMING = {\n  name: 'PC Gaming Show',\n  logo: 'pc_gaming.svg',\n}\n\nconst LIMITED_RUN = {\n  name: 'Limited Run',\n  logo: 'limited_run.svg',\n}\n\nconst UBISOFT = {\n  name: 'Ubisoft',\n  logo: 'ubisoft.svg',\n}\n\nconst KINDA_FUNNY_SHOWCASE = {\n  name: 'Kinda Funny Showcase',\n  logo: 'kinda_funny_showcase.svg',\n}\n\nconst SQUARE_ENIX = {\n  name: 'Square Enix',\n  logo: 'square_enix.svg',\n}\n\nconst NINTENDO_DIRECT = {\n  name: 'Nintendo Direct',\n  logo: 'nintendo_direct.svg',\n}\n\ninterface ISchedule {\n  company: ICompany\n  time: Date\n}\n\n// @ts-ignore\nconst SCHEDULE: ISchedule[] = [\n  {\n    company: EA,\n    time: new Date(\"June 8 2019 12:00 pm PDT\"),\n  },\n  {\n    company: MICROSOFT,\n    time: new Date(\"June 9 2019 4:00 pm EDT\"),\n  },\n  {\n    company: BETHESDA,\n    time: new Date(\"June 9 2019 8:30 pm EDT\"),\n  },\n  {\n    company: DEVOLVER_DIGITAL,\n    time: new Date(\"June 9 2019 11:00 pm EDT\"),\n  },\n  {\n    company: UPLOADVR,\n    time: new Date(\"June 10 2019 16:00 UTC\"),\n  },\n  {\n    company: PC_GAMING,\n    time: new Date(\"June 10 2019 17:00 UTC\"),\n  },\n  {\n    company: LIMITED_RUN,\n    time: new Date(\"June 10 2019 19:00 UTC\"),\n  },\n  {\n    company: UBISOFT,\n    time: new Date(\"June 10 2019 20:00 UTC\"),\n  },\n  {\n    company: KINDA_FUNNY_SHOWCASE,\n    time: new Date(\"June 10 2019 23:00 UTC\"),\n  },\n  {\n    company: SQUARE_ENIX,\n    time: new Date(\"June 11 2019 01:00 UTC\"),\n  },\n  {\n    company: NINTENDO_DIRECT,\n    time: new Date(\"June 11 2019 16:00 UTC\"),\n  },\n]\n\nclass Conference {\n  private schedule: ISchedule\n  private el: string\n\n  constructor(schedule: ISchedule) {\n    this.schedule = schedule\n    this.el = `\n      <div class=\"conference\">\n        <div class=\"company\">${schedule.company.name}</div>\n        <div class=\"time\">${this.getTime()}</div>\n      </div>\n    `\n  }\n\n  private getTime() {\n    return Intl.DateTimeFormat(undefined, {\n      hour: 'numeric',\n      minute: 'numeric',\n      timeZoneName: 'short',\n    }).format(this.schedule.time)\n  }\n\n  public getDayOfMonth() {\n    return Number(\n      Intl.DateTimeFormat(undefined, {\n        day: 'numeric',\n      }).format(this.schedule.time),\n    )\n  }\n\n  public getDayString() {\n    return Intl.DateTimeFormat(undefined, {\n      weekday: 'long',\n      month: 'long',\n      day: 'numeric',\n    }).format(this.schedule.time)\n  }\n\n  public appendTo(element: HTMLElement) {\n    element.insertAdjacentHTML('beforeend', this.el)\n  }\n}\n\nconst updatePage = () => {\n  const container = document.getElementById('container')!\n\n  const conferences = SCHEDULE.map(c => new Conference(c))\n\n  let dayContainer: HTMLElement = null as any\n  let lastDay = -1\n\n  conferences.forEach(c => {\n    const dayOfMonth = c.getDayOfMonth()\n\n    if (lastDay !== dayOfMonth) {\n      lastDay = dayOfMonth\n\n      dayContainer = document.createElement('section')\n      dayContainer.classList.add('day')\n\n      container.append(dayContainer)\n      dayContainer.insertAdjacentHTML('beforebegin', `<h1 class=\"title\">${c.getDayString()}</h1>`)\n    }\n\n    c.appendTo(dayContainer)\n  })\n}\n\nupdatePage()\n"]}