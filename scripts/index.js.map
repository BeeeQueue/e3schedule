{"version":3,"sources":["scripts/index.ts"],"names":["EA","name","logo","MICROSOFT","BETHESDA","DEVOLVER_DIGITAL","UPLOADVR","PC_GAMING","LIMITED_RUN","UBISOFT","KINDA_FUNNY_SHOWCASE","SQUARE_ENIX","NINTENDO_DIRECT","getDate","day","month","year","hour","minute","Date","SCHEDULE","company","time","Conference","schedule","el","getTime","Intl","DateTimeFormat","undefined","timeZoneName","format","Number","weekday","element","insertAdjacentHTML","updatePage","container","document","getElementById","conferences","map","c","dayContainer","lastDay","forEach","dayOfMonth","getDayOfMonth","createElement","classList","add","append","getDayString","appendTo"],"mappings":"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","sourcesContent":["interface ICompany {\n  name: string\n  logo: string\n}\n\nconst EA = {\n  name: 'EA Play',\n  logo: 'ea.svg',\n}\n\nconst MICROSOFT = {\n  name: 'Microsoft',\n  logo: 'microsoft.svg',\n}\n\nconst BETHESDA = {\n  name: 'Bethesda',\n  logo: 'bethesda.svg',\n}\n\nconst DEVOLVER_DIGITAL = {\n  name: 'Devolver Digital',\n  logo: 'devolver_digital.svg',\n}\n\nconst UPLOADVR = {\n  name: 'UploadVR',\n  logo: 'upload_vr.svg',\n}\n\nconst PC_GAMING = {\n  name: 'PC Gaming Show',\n  logo: 'pc_gaming.svg',\n}\n\nconst LIMITED_RUN = {\n  name: 'Limited Run',\n  logo: 'limited_run.svg',\n}\n\nconst UBISOFT = {\n  name: 'Ubisoft',\n  logo: 'ubisoft.svg',\n}\n\nconst KINDA_FUNNY_SHOWCASE = {\n  name: 'Kinda Funny Showcase',\n  logo: 'kinda_funny_showcase.svg',\n}\n\nconst SQUARE_ENIX = {\n  name: 'Square Enix',\n  logo: 'square_enix.svg',\n}\n\nconst NINTENDO_DIRECT = {\n  name: 'Nintendo Direct',\n  logo: 'nintendo_direct.svg',\n}\n\ninterface ISchedule {\n  company: ICompany\n  time: Date\n}\n\nconst getDate = (\n  day: number,\n  month: number,\n  year: number,\n  hour: number,\n  minute: number,\n) => new Date(`${month} ${day} ${year} ${hour}:${minute} UTC`)\n\n// @ts-ignore\nconst SCHEDULE: ISchedule[] = [\n  {\n    company: EA,\n    time: getDate(9, 6, 2019, 16, 30),\n  },\n  {\n    company: MICROSOFT,\n    time: getDate(9, 6, 2019, 20, 0),\n  },\n  {\n    company: BETHESDA,\n    time: getDate(10, 6, 2019, 0, 30),\n  },\n  {\n    company: DEVOLVER_DIGITAL,\n    time: getDate(10, 6, 2019, 2, 0),\n  },\n  {\n    company: UPLOADVR,\n    time: getDate(10, 6, 2019, 16, 0),\n  },\n  {\n    company: PC_GAMING,\n    time: getDate(10, 6, 2019, 17, 0),\n  },\n  {\n    company: LIMITED_RUN,\n    time: getDate(10, 6, 2019, 19, 0),\n  },\n  {\n    company: UBISOFT,\n    time: getDate(10, 6, 2019, 20, 0),\n  },\n  {\n    company: KINDA_FUNNY_SHOWCASE,\n    time: getDate(10, 6, 2019, 23, 30),\n  },\n  {\n    company: SQUARE_ENIX,\n    time: getDate(11, 6, 2019, 1, 0),\n  },\n  {\n    company: NINTENDO_DIRECT,\n    time: getDate(11, 6, 2019, 16, 0),\n  },\n]\n\nclass Conference {\n  private schedule: ISchedule\n  private el: string\n\n  constructor(schedule: ISchedule) {\n    this.schedule = schedule\n    this.el = `\n      <div class=\"conference\">\n        <div class=\"company\">${schedule.company.name}</div>\n        <div class=\"time\">${this.getTime()}</div>\n      </div>\n    `\n  }\n\n  private getTime() {\n    return Intl.DateTimeFormat(undefined, {\n      hour: 'numeric',\n      minute: 'numeric',\n      timeZoneName: 'short',\n    }).format(this.schedule.time)\n  }\n\n  public getDayOfMonth() {\n    return Number(\n      Intl.DateTimeFormat(undefined, {\n        day: 'numeric',\n      }).format(this.schedule.time),\n    )\n  }\n\n  public getDayString() {\n    return Intl.DateTimeFormat(undefined, {\n      weekday: 'long',\n      month: 'long',\n      day: 'numeric',\n    }).format(this.schedule.time)\n  }\n\n  public appendTo(element: HTMLElement) {\n    element.insertAdjacentHTML('beforeend', this.el)\n  }\n}\n\nconst updatePage = () => {\n  const container = document.getElementById('container')!\n\n  const conferences = SCHEDULE.map(c => new Conference(c))\n\n  let dayContainer: HTMLElement = null as any\n  let lastDay = -1\n\n  conferences.forEach(c => {\n    const dayOfMonth = c.getDayOfMonth()\n\n    if (lastDay !== dayOfMonth) {\n      lastDay = dayOfMonth\n\n      dayContainer = document.createElement('section')\n      dayContainer.classList.add('day')\n\n      container.append(dayContainer)\n      dayContainer.insertAdjacentHTML('beforebegin', `<h1 class=\"title\">${c.getDayString()}</h1>`)\n    }\n\n    c.appendTo(dayContainer)\n  })\n}\n\nupdatePage()\n"],"file":"index.js"}